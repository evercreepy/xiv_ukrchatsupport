name: Create Release

on:
    push:
        tags-ignore:
            - t*
            
jobs:
    build:
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: true
                  fetch-depth: 0
            - name: Setup .NET
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: '7.x.x'
            - name: Restore dependencies
              run: dotnet restore
            - name: Download Dalamud
              run: |
                  Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
                  Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"
            - name: Build
              run: |
                  $ver = '${{ github.ref }}' -replace 'refs/tags/',''
                  invoke-expression 'dotnet build --no-restore --configuration Release --nologo -p:Version=$ver -p:FileVersion=$ver -p:AssemblyVersion=$ver'
            - name: write version into json
              run: |
                  $ver = '${{ github.ref }}' -replace 'refs/tags/',''
                  $path = './G4EUkrChatSupport/bin/Release/G4EUkrChatSupport.json'
                  $content = get-content -path $path
                  $content = $content -replace '1.0.0.0',$ver
                  set-content -Path $path -Value $content
            - name: Unzip latest file
              run: 7z e ./G4EUkrChatSupport/bin/Release/G4EUkrChatSupport/latest.zip -o"./G4EUkrChatSupport/bin/Release/G4EUkrChatSupport/latest"
            - name: Upload a Build Artifact
              uses: actions/upload-artifact@v3
              with:
                  path: |
                      ./G4EUkrChatSupport/bin/Release/G4EUkrChatSupport/latest/*
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: G4EUkrChatSupport ${{ github.ref }}
                  draft: false
                  prerelease: false
            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./G4EUkrChatSupport/bin/Release/G4EUkrChatSupport/latest.zip
                  asset_name: G4EUkrChatSupport.zip
                  asset_content_type: application/zip

            - name: Write out repo.json and G4EUkrChatSupport.csproj
              run: |
                  $ver = '${{ github.ref }}' -replace 'refs/tags/',''
                  $path = './base_repo.json'
                  $new_path = './repo.json'
                  $project_path = './G4EUkrChatSupport/G4EUkrChatSupport.csproj'
                  $content = get-content -path $path
                  $content = $content -replace '/1.0.0.0/',"/$ver/"
                  $content = $content -replace '1.0.0.0',$ver
                  $project_content = get-content -path $project_path
                  $project_content = $project_content -replace '<Version>[\d]\.[\d]\.[\d]\.[\d]<\/Version>',@('<Version>' + $ver + '</Version>')
                  $project_content = $project_content -replace '<AssemblyVersion>[\d]\.[\d]\.[\d]\.[\d]<\/AssemblyVersion>',@('<AssemblyVersion>' + $ver + '</AssemblyVersion>')
                  $project_content = $project_content -replace '<FileVersion>[\d]\.[\d]\.[\d]\.[\d]<\/FileVersion>',@('<FileVersion>' + $ver + '</FileVersion>')
                  set-content -Path $new_path -Value $content
                  set-content -Path $project_path -Value $project_content
            - name: Commit repo.json and G4EUkrChatSupport.csproj
              run: |
                  git config --global user.name "Actions User"
                  git config --global user.email "actions@github.com"
                  
                  git fetch origin dev
                  git checkout dev
                  git add repo.json
                  git add G4EUkrChatSupport/G4EUkrChatSupport.csproj
                  git commit -m "[CI] Updating Version for ${{ github.ref }}" || true                  
                  git push origin dev -f || true
